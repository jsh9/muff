[tox]
envlist = 
    fmt,
    clippy,
    clippy-wasm,
    test,
    test-insta,
    test-wasm,
    scripts,
    pre-commit,
    shear,
    python-package,
    formatter-checks

[testenv:fmt]
deps =
allowlist_externals = cargo
commands = cargo fmt --all --check

[testenv:clippy]
deps =
allowlist_externals = cargo
commands = 
    cargo clippy --workspace --all-targets --all-features --locked -- -D warnings

[testenv:clippy-wasm]
deps =
allowlist_externals = cargo
commands =
    rustup target add wasm32-unknown-unknown
    cargo clippy -p ruff_wasm -p ty_wasm \
        --target wasm32-unknown-unknown \
        --all-features --locked -- -D warnings

[testenv:test]
deps =
allowlist_externals = cargo
setenv = RUFF_UPDATE_SCHEMA=1
commands = cargo test

[testenv:test-insta]
deps =
allowlist_externals = cargo
setenv =
    NEXTEST_PROFILE=ci
    RUFF_UPDATE_SCHEMA=1
commands =
    cargo binstall --no-confirm cargo-nextest
    cargo binstall --no-confirm cargo-insta
    cargo test -p ty_python_semantic --test mdtest
    cargo insta test --all-features \
        --unreferenced reject --test-runner nextest

[testenv:test-wasm]
deps =
allowlist_externals =
    cargo
    wasm-pack
    npm
commands =
    rustup target add wasm32-unknown-unknown
    npm install -g wasm-pack@0.13.1
    bash -c "cd crates/ruff_wasm && wasm-pack test --node"
    bash -c "cd crates/ty_wasm && wasm-pack test --node"

[testenv:scripts]
deps =
allowlist_externals =
    python
    cargo
    bash
    git
commands =
    python crates/ruff_python_ast/generate.py
    python crates/ruff_python_formatter/generate.py
    bash -c "test -z \"$(git status --porcelain)\""
    bash -c "./scripts/add_rule.py --name DoTheThing \
        --prefix F --code 999 --linter pyflakes"
    cargo check
    bash -c "./scripts/add_plugin.py test \
        --url https://pypi.org/project/-test/0.1.0/ --prefix TST && \
        ./scripts/add_rule.py --name FirstRule --prefix TST --code 001 --linter test"
    cargo check

[testenv:pre-commit]
deps =
allowlist_externals = uvx
setenv =
    SKIP=cargo-fmt,clippy,dev-generate-all
    PYTHON_VERSION=3.13
commands = 
    uvx --python="{env:PYTHON_VERSION}" pre-commit run \
        --all-files --show-diff-on-failure --hook-stage=manual

[testenv:shear]
deps =
allowlist_externals = cargo
commands =
    cargo binstall --no-confirm cargo-shear
    cargo shear

[testenv:python-package]
deps =
allowlist_externals =
    python
    pip
    cargo
setenv =
    PACKAGE_NAME=muff
commands =
    python scripts/transform_readme.py --target pypi
    pip install maturin
    maturin build --out dist
    pip install --force-reinstall --find-links dist \
        "{env:PACKAGE_NAME}"
    muff --help
    python -m muff --help

[testenv:formatter-checks]
deps =
allowlist_externals =
    bash
    cat
commands =
    bash scripts/formatter_ecosystem_checks.sh
    cat target/formatter-ecosystem/stats.txt

[testenv:fuzz-build]
deps =
allowlist_externals = cargo
commands =
    cargo binstall --no-confirm cargo-fuzz
    cargo fuzz build -s none